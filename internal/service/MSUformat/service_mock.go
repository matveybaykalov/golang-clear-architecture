// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package bmstuformat is a generated GoMock package.
package msuformat

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMsuFormatRepo is a mock of MsuFormatRepo interface.
type MockMsuFormatRepo struct {
	ctrl     *gomock.Controller
	recorder *MockMsuFormatRepoMockRecorder
}

// MockMsuFormatRepoMockRecorder is the mock recorder for MockMsuFormatRepo.
type MockMsuFormatRepoMockRecorder struct {
	mock *MockMsuFormatRepo
}

// NewMockMsuFormatRepo creates a new mock instance.
func NewMockMsuFormatRepo(ctrl *gomock.Controller) *MockMsuFormatRepo {
	mock := &MockMsuFormatRepo{ctrl: ctrl}
	mock.recorder = &MockMsuFormatRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMsuFormatRepo) EXPECT() *MockMsuFormatRepoMockRecorder {
	return m.recorder
}

// GetBytes mocks base method.
func (m *MockMsuFormatRepo) GetBytes(arg0 context.Context) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBytes", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBytes indicates an expected call of GetBytes.
func (mr *MockMsuFormatRepoMockRecorder) GetBytes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBytes", reflect.TypeOf((*MockMsuFormatRepo)(nil).GetBytes), arg0)
}
